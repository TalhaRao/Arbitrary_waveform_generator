-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\AWFG_Phase2\FPGA_Calculation.vhd
-- Created: 2018-08-30 01:10:44
-- 
-- Generated by MATLAB 9.4 and HDL Coder 3.12
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: FPGA_Calculation
-- Source Path: Dynamic_Calculations/FPGA_Calculation
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY FPGA_Calculation IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        c0                                :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
        c1                                :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
        c2                                :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
        write                             :   IN    std_logic;
        writeAddr                         :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        M                                 :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
        T                                 :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
        y                                 :   OUT   std_logic_vector(26 DOWNTO 0)  -- sfix27_En19
        );
END FPGA_Calculation;


ARCHITECTURE rtl OF FPGA_Calculation IS

  -- Component Declarations
  COMPONENT TimeGenerator
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          M                               :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
          T                               :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
          Time_rsvd                       :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
          readAddr                        :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
          );
  END COMPONENT;

  COMPONENT Write_to_Memory
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          readAddr                        :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          c0                              :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
          c1                              :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
          c2                              :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
          write                           :   IN    std_logic;
          writeAddr                       :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          c0Ram                           :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
          c1Ram                           :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
          c2Ram                           :   OUT   std_logic_vector(26 DOWNTO 0)  -- sfix27_En19
          );
  END COMPONENT;

  COMPONENT Polynomial_Calculation
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Time_rsvd                       :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
          breakpoints                     :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          c0Ram                           :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
          c1Ram                           :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
          c2Ram                           :   IN    std_logic_vector(26 DOWNTO 0);  -- sfix27_En19
          y                               :   OUT   std_logic_vector(26 DOWNTO 0)  -- sfix27_En19
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : TimeGenerator
    USE ENTITY work.TimeGenerator(rtl);

  FOR ALL : Write_to_Memory
    USE ENTITY work.Write_to_Memory(rtl);

  FOR ALL : Polynomial_Calculation
    USE ENTITY work.Polynomial_Calculation(rtl);

  -- Signals
  SIGNAL Time_rsvd                        : std_logic_vector(26 DOWNTO 0);  -- ufix27
  SIGNAL TimeGenerator_out2               : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL Write_to_Memory_out1             : std_logic_vector(26 DOWNTO 0);  -- ufix27
  SIGNAL Write_to_Memory_out2             : std_logic_vector(26 DOWNTO 0);  -- ufix27
  SIGNAL Write_to_Memory_out3             : std_logic_vector(26 DOWNTO 0);  -- ufix27
  SIGNAL Polynomial_Calculation_out1      : std_logic_vector(26 DOWNTO 0);  -- ufix27

BEGIN
  -- This block will run on FPGA, responsible for calculating polynomial
  -- 
  -- AWFG DYNAMIC CALCULATIONS

  u_TimeGenerator : TimeGenerator
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              M => M,  -- sfix27_En19
              T => T,  -- sfix27_En19
              Time_rsvd => Time_rsvd,  -- sfix27_En19
              readAddr => TimeGenerator_out2  -- uint8
              );

  u_Write_to_Memory : Write_to_Memory
    PORT MAP( clk => clk,
              enb => enb,
              readAddr => TimeGenerator_out2,  -- uint8
              c0 => c0,  -- sfix27_En19
              c1 => c1,  -- sfix27_En19
              c2 => c2,  -- sfix27_En19
              write => write,
              writeAddr => writeAddr,  -- uint8
              c0Ram => Write_to_Memory_out1,  -- sfix27_En19
              c1Ram => Write_to_Memory_out2,  -- sfix27_En19
              c2Ram => Write_to_Memory_out3  -- sfix27_En19
              );

  u_Polynomial_Calculation : Polynomial_Calculation
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              Time_rsvd => Time_rsvd,  -- sfix27_En19
              breakpoints => TimeGenerator_out2,  -- uint8
              c0Ram => Write_to_Memory_out1,  -- sfix27_En19
              c1Ram => Write_to_Memory_out2,  -- sfix27_En19
              c2Ram => Write_to_Memory_out3,  -- sfix27_En19
              y => Polynomial_Calculation_out1  -- sfix27_En19
              );

  y <= Polynomial_Calculation_out1;

END rtl;

